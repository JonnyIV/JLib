# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches:
      - dev
    tags:
      # we are not at v1 yet
      - 'v0.*.*-alpha'

jobs:
  build:
    runs-on: windows-latest
    environment: PreRelease

    strategy:
      matrix:
        dotnet-version: ['6.0.x', '7.0.x', '8.0.x']
          
    steps:
    # determine version from tag
    - name: Extract version from Tag
      id: version
      run: |
        echo "::set-output name=versionWithPrefix::${{ github.ref.replace('refs/tags/', '') }}"
        echo "::set-output name=version::${{ github.ref.replace('refs/tags/v', '') }}"
    # setup    
    - uses: actions/checkout@v3
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore
    # build
    - name: Build
      run: dotnet build 
        --version-suffix ${{ steps.version.outputs.version }} 
        --no-incremental 
        -c Release
    # test
    - name: Test
      run: dotnet test --no-build --verbosity normal
    # create packages
    - name: pack
      run: dotnet pack 
        --version-suffix ${{ steps.version.outputs.version }} 
        -c Release 
        -o .\bin\${{ steps.version.outputs.versionWithPrefix }}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.version.outputs.versionWithPrefix }}
        path: .\bin\${{ steps.version.outputs.versionWithPrefix }}
    # create release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: v${{ steps.version.outputs.version }}
        body: |
          Changes in this Release
        draft: true
        prerelease: true
    # upload packages
    - name: Upload Release Asset
      id: upload-release-asset
      run: dotnet nuget push 
        --source https://api.nuget.org/v3/index.json
        --skip-duplicate
        --api-key ${{ secrets.NUGET_API_KEY }} 
        .\bin\${{ steps.version.outputs.versionWithPrefix }}\*.nupkg